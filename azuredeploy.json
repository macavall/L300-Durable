{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "name": {
            "type": "String",
            "defaultValue": "[format('func-{0}', uniqueString(resourceGroup().id))]",
            "metadata": {
              "description": "The name of the Azure Function app."
          }
        },
        "location": {
            "type": "String",
            "defaultValue": "[resourceGroup().location]"
        },
        "use32BitWorkerProcess": {
            "type": "Bool",
            "defaultValue": "false"
        },
        "ftpsState": {
            "type": "String",
            "defaultValue": "FtpsOnly"
        },
        "storageAccountName": {
          "type": "string",
          "defaultValue": "[format('st{0}', uniqueString(resourceGroup().id))]"
        },
        "netFrameworkVersion": {
            "type": "String",
            "defaultValue": "net6.0"
        },
        "sku": {
            "type": "String",
            "defaultValue": "Dynamic"
        },
        "skuCode": {
            "type": "String",
            "defaultValue": "Y1"
        },
        "workerSize": {
            "type": "String",
            "defaultValue": "0"
        },
        "workerSizeId": {
            "type": "String",
            "defaultValue": "0"
        },
        "numberOfWorkers": {
            "type": "String",
            "defaultValue": "1"
        },
        "hostingPlanName": {
            "type": "String",
            "defaultValue": "[format('plan-{0}', uniqueString(resourceGroup().id))]"
        },
        "serverFarmResourceGroup": {
            "type": "String",
            "defaultValue": "[resourceGroup().id]"
        },
        "alwaysOn": {
            "type": "Bool",
            "defaultValue": "false"
        }
    },
    "variables": {
        "applicationInsightsName": "[format('AppInsights{0}', uniqueString(resourceGroup().id))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[format('microsoft.insights/components/{0}', variables('applicationInsightsName')]",
                "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
            ],
            "tags": {
                "hidden-link: /app-insights-resource-id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/{2}Microsoft.Insights/components/{3}', subscription().subscriptionId, resourceGroup().id, variables('applicationInsightsName')]"
            },
            "kind": "functionapp",
            "properties": {
                "name": "[parameters('name')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet-isolated"
                        },
                        {
                            "name": "WEBSITE_USE_PLACEHOLDER_DOTNETISOLATED",
                            "value": "1"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference(format('microsoft.insights/components/{0}, variables('applicationInsightsName')'), '2015-05-01').ConnectionString]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "durabletest563confab2ca"
                        }
                    ],
                    "cors": {
                        "allowedOrigins": [
                            "https://ms.portal.azure.com"
                        ]
                    },
                    "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
                    "ftpsState": "[parameters('ftpsState')]",
                    "netFrameworkVersion": "[parameters('netFrameworkVersion')]"
                },
                "clientAffinityEnabled": false,
                "virtualNetworkSubnetId": null,
                "publicNetworkAccess": "Enabled",
                "httpsOnly": true,
                "serverFarmId": "[concat('/subscriptions/', parameters('subscriptionId'),'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-11-01",
            "name": "[parameters('hostingPlanName')]",
            "location": "[parameters('location')]",
            "dependsOn": [],
            "sku": {
                "Tier": "[parameters('sku')]",
                "Name": "[parameters('skuCode')]"
            },
            "kind": "",
            "properties": {
                "name": "[parameters('hostingPlanName')]",
                "workerSize": "[parameters('workerSize')]",
                "workerSizeId": "[parameters('workerSizeId')]",
                "numberOfWorkers": "[parameters('numberOfWorkers')]"
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "durabletest563conai",
            "location": "eastus",
            "dependsOn": [],
            "properties": {
                "ApplicationId": "[parameters('name')]",
                "Request_Source": "IbizaWebAppExtensionCreate",
                "Flow_Type": "Redfield",
                "Application_Type": "web",
                "WorkspaceResourceId": "/subscriptions/153bf828-3e1e-48f9-8e6d-7f69c8e188aa/resourcegroups/defaultresourcegroup-eus/providers/microsoft.operationalinsights/workspaces/defaultworkspace-153bf828-3e1e-48f9-8e6d-7f69c8e188aa-eus"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-05-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2",
                "defaultToOAuthAuthentication": true
            }
        },
        {
            "type": "microsoft.insights/diagnosticSettings",
            "apiVersion": "2021-05-01-preview",
            "name": "[concat(parameters('storageAccountName'), '-sa-blob-logs')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "workspaceId": null,
                "storageAccountId": "/subscriptions/153bf828-3e1e-48f9-8e6d-7f69c8e188aa/resourceGroups/00durabletest563rg/providers/Microsoft.Storage/storageAccounts/durabletest563constor",
                "logs": [
                    {
                        "category": "StorageWrite",
                        "enabled": true
                    }
                ],
                "metrics": [
                    {
                        "category": "Transaction",
                        "enabled": true
                    }
                ]
            },
            "scope": "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'), '/blobServices/default')]"
        }
    ]
}
